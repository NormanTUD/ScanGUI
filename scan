#!/usr/bin/env python3

import re
import io
import os
import sys
from easygui import choicebox
from pprint import pprint
from shutil import which
import subprocess

def debug (string):
    print(string)

def check_dependencies():
    for dependency in ["scanimage"]:
        if which(dependency) is not None:
            debug(dependency + " ok")
        else:
            print(dependency + " cannot be found")
            sys.exit(1)

def get_scanners():
    scanners = {}
    proc = subprocess.Popen(['scanimage','-L'],stdout=subprocess.PIPE)
    for line in io.TextIOWrapper(proc.stdout, encoding="utf-8"):  # or another encoding
        if not line:
            break
        m = re.match(".*`(.*)' is a (.*)", line)
        if m:
            scanners[m.group(1)] = m.group(2)
    return scanners

def scan (scanner_id, batch):
    os.system("scanimage -d '" + scanner_id + "' --batch --batch-start=0 --source='ADF Duplex' --resolution 300 --format=jpeg --mode Color")

def main():
    check_dependencies()
    scanners = get_scanners()
    scanner = None
    if len(scanners) == 0:
        print("No scanners could be found")
        sys.exit(2)
    elif len(scanners) == 1:
        scanner = next(iter(scanners))
    else:
        chosen_scanner = choicebox("Which scanner should I use?", "Scanner-Chooser", scanners.values())
        for scanner_id, scanner_name in scanners.items():
            if chosen_scanner == scanner_name:
                scanner = scanner_id

    reply = choicebox("Do you want to scan everything or just one document?", choices=["batch", "single"])

    print("Chose " + scanner + ", " + scanners[scanner])
    scan(scanner)

if __name__ == "__main__":
    main()
